<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.ItemMapper">
	<!-- 주문 완료 후 수량을 줄여주는 기능 -->
	<update id="cntdown" parameterType="OrderDetailDTO">
	UPDATE item SET cnt=cnt-(SELECT cnt from order_detail where orderdet_key=${orderdet_key})
	WHERE item_key=(SELECT item_key FROM order_detail WHERE orderdet_key=${orderdet_key});
	</update>

	<select id="bestItem" resultType="ItemDTO">
		SELECT * FROM item ORDER BY RAND() Limit 8;
	</select>
	
	<!-- item_key에 해당하는 데이터 조회 -->
	<select id="select" parameterType="Integer" resultType="ItemDTO">
		SELECT * FROM item WHERE item_key=#{item_key}
	</select>
	
	<!-- 모든 상품 조회 -->
	<select id="selectall" resultType="ItemDTO">
		SELECT * FROM item
	</select>
	
	<!-- item_key 오름차순으로 데이터 모두 조회 (LIMIT-데이터 시작위치[0이 처음]와 시작위치를 기준으로 가져올 데이터의 개수) -->
	<select id="getItemList" resultType="ItemDTO" parameterType="Criteria">
		SELECT * FROM item
		
		<where>
		<!-- 	<if test="keyword != null">
				and name like concat('%' , #{keyword}, '%')
			</if> -->
			<if test="category_key != 0">
				and category_key = #{category_key}
			</if>
			
		</where>
		
		ORDER BY ${order_cri} ${asc_desc}
		LIMIT #{skip}, #{amount}
	</select>

	
	<!-- not null칼럼 값들만 입력하여 데이터 삽입 -->
	<insert id="insert" parameterType="ItemDTO">
		INSERT INTO item(category_key,name,img1,content,price,sale,cnt) VALUES(#{category_key},#{name},#{img1},#{content},#{price},#{sale},#{cnt})
	</insert>
	
	<!-- item_key를 사용하여 not null칼럼 값들 데이터 업데이트 -->
	<update id="update" parameterType="ItemDTO">
		UPDATE item SET category_key=#{category_key},name=#{name},img1=#{img1},content=#{content},price=#{price},sale=#{sale},cnt=#{cnt} WHERE item_key=#{item_key}
	</update>
	
	<!-- item_key를 사용하여 데이터 삭제 -->
	<delete id="delete" parameterType="ItemDTO">
		DELETE FROM item WHERE item_key=#{item_key}
	</delete>
	
	<!-- 모든 상품 데이터 갯수 세기 -->
	<select id="countItem" resultType="int" parameterType="Criteria">
		SELECT count(*) FROM item 
		
		<where>
		<!-- 	<if test="keyword != null">
				and name like concat('%' , #{keyword}, '%')
			</if> -->
			<if test="category_key != 0">
				and category_key = #{category_key}
			</if>
		</where>
		
		ORDER BY #{order_cri} 
			<if test="asc_desc != null">
				#{asc_desc}
			</if>
	</select>

	
	<select id="newItem" resultType="ItemDTO">
		SELECT * FROM item ORDER BY item_key desc limit 8;
	</select>
</mapper>