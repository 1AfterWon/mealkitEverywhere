<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.ItemMapper">
	<!-- 주문 완료 후 수량을 줄여주는 기능 -->
	<update id="cntDown" parameterType="OrderDetailDTO">
	UPDATE item SET cnt=cnt-(SELECT cnt from orderDetail where orderDetKey=${orderDetKey})
	WHERE itemKey=(SELECT itemKey FROM orderDetail WHERE orderDetKey=${orderDetKey});
	</update>

	<!-- itemKey에 해당하는 데이터 조회 -->
	<select id="select" parameterType="Integer" resultType="ItemDTO">
		SELECT * FROM item WHERE itemKey=#{itemKey}
	</select>
	
	<!-- 모든 상품 조회 -->
	<select id="selectall" resultType="ItemDTO">
		SELECT * FROM item
	</select>
	
	<!-- itemKey 오름차순으로 데이터 모두 조회 (LIMIT-데이터 시작위치[0이 처음]와 시작위치를 기준으로 가져올 데이터의 개수) -->
	<select id="getItemList" resultType="ItemDTO" parameterType="Criteria">
		SELECT it.name, it.categoryKey, it.itemKey, it.img1, it.content, it.price, it.sale, it.rdate 
		FROM item AS it
		
		
		<if test="order_cri == 'orD.cnt'">
			LEFT OUTER JOIN orderDetail AS orD ON orD.itemKey = it.itemKey
			
			<if test="categoryKey != 0">
				<where>
					it.categoryKey = ${categoryKey}
					<if test="keyword != null">
						and it.name like concat('%' , #{keyword}, '%')
					</if>
				</where>
			</if>
			<if test="categoryKey == 0">
				<if test="keyword != null">
				WHERE it.name like concat('%' , #{keyword}, '%')
				</if>
			</if>
			GROUP BY it.itemKey
			ORDER BY sum(${order_cri}) ${asc_desc}
		</if>
	
		
		<if test="order_cri != 'orD.cnt'">
			<where>
				<if test="categoryKey != 0">
					and it.categoryKey = ${categoryKey}
				</if>
				<if test="keyword != null">
					and it.name like concat('%' , #{keyword}, '%')
				</if>
			</where>
			ORDER BY ${order_cri} ${asc_desc}
		</if>
		LIMIT ${skip}, ${amount}
	</select>

	
	<!-- not null칼럼 값들만 입력하여 데이터 삽입 -->
	<insert id="insert" parameterType="ItemDTO">
		INSERT INTO item(categoryKey,name,img1,content,price,sale,cnt) VALUES(#{categoryKey},#{name},#{img1},#{content},#{price},#{sale},#{cnt})
	</insert>
	
	<!-- itemKey를 사용하여 not null칼럼 값들 데이터 업데이트 -->
	<update id="update" parameterType="ItemDTO">
		UPDATE item SET categoryKey=#{categoryKey},name=#{name},img1=#{img1},content=#{content},price=#{price},sale=#{sale},cnt=#{cnt} WHERE itemKey=#{itemKey}
	</update>
	
	<!-- itemKey를 사용하여 데이터 삭제 -->
	<delete id="delete" parameterType="ItemDTO">
		DELETE FROM item WHERE itemKey=#{itemKey}
	</delete>
	
	<!-- 모든 상품 데이터 갯수 세기 -->
	<select id="countItem" resultType="int" parameterType="Criteria">
		SELECT count(*) 
		FROM item  
		<where>
			<if test="keyword != null">
				and name like concat('%' , #{keyword}, '%')
			</if>
			<if test="categoryKey != 0">
				and categoryKey = ${categoryKey}
			</if>
		</where>
			
		ORDER BY itemKey
		
		<if test="asc_desc != null">
			${asc_desc}
		</if>
	</select>

	
	<select id="newItem" resultType="ItemDTO">
		SELECT * FROM item ORDER BY itemKey desc limit 8;
	</select>
	
	<select id="bestItem" resultType="ItemDTO">	
	SELECT SUM(od.cnt) AS "totalPrice", i.itemKey AS "itemKey", i.name AS "name", i.categoryKey AS "categoryKey", i.img1 AS "img1", i.price AS "price", i.sale AS "sale" FROM item i
	JOIN orderDetail od ON od.itemKey = i.itemKey
	GROUP BY i.itemKey
	ORDER BY totalPrice DESC
	LIMIT 8;
	</select>
	
</mapper>