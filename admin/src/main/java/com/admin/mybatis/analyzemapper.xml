<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.admin.mapper.AnalyzeMapper">

	<!-- 연간 카테고리별 통계 -->
	<select id="categoryYearAnalyze" parameterType="String" resultType="ItemDTO">
		SELECT i.categoryKey, sum(od.price*od.cnt) AS salesSum,
		count(od.price*od.cnt) AS salesCnt
		FROM orderDetaiL od
		INNER JOIN item i ON i.itemKey=od.itemKey
		INNER JOIN totalOrder o ON o.orderKey=od.orderKey WHERE
		<![CDATA[
		DATE_FORMAT(o.rdate, '%Y-%m-%d') >= DATE_FORMAT( '${year}-01-01','%Y-%m-%d') AND 
		DATE_FORMAT(o.rdate, '%Y-%m-%d') <= DATE_FORMAT('${year}-12-31', '%Y-%m-%d')
		]]>
		GROUP BY i.categoryKey
		ORDER BY categoryKey ASC
	</select>
	<!-- 주어진 년도에 해당되는 판매액, 배송건, 구매확정률에 대한 데이터 -->
	<select id="dashBoardCardYear" resultType="OrderDTO">
	SELECT COUNT(orderKey) AS "itemCnt", SUM(price) AS "price",
	(SELECT COUNT(orderKey) FROM totalOrder WHERE rdate BETWEEN '${year}-01-01 00:00:00' AND '${year}-12-31 23:59:59' AND status NOT LIKE 'F' ) AS "status",
	(SELECT COUNT(orderKey) FROM totalOrder WHERE rdate BETWEEN '${year}-01-01 00:00:00' AND '${year}-12-31 23:59:59' AND status LIKE 'F') AS "refund",
	(SELECT SUM(od.cnt) FROM totalOrder t JOIN orderDetail od ON od.orderKey = t.orderKey WHERE rdate BETWEEN '${year}-01-01 00:00:00' AND '${year}-12-31 23:59:59' AND status NOT LIKE 'F') AS "totalSales"
	FROM totalOrder
	WHERE rdate BETWEEN '${year}-01-01 00:00:00' AND '${year}-12-31 23:59:59' AND status NOT LIKE 'F'
	</select>

	<!-- 주어진 년도, 월에 해당되는 판매액, 배송건, 구매확정률에 대한 데이터 -->
	<select id="dashBoardCardMonth" resultType="OrderDTO">
	SELECT COUNT(orderKey) AS "itemCnt", SUM(price) AS "price",
	(SELECT COUNT(orderKey) FROM totalOrder WHERE rdate BETWEEN '${year}-${month}-01 00:00:00' AND '${year}-${month}-31 23:59:59' AND status NOT LIKE 'F' ) AS "status",
	(SELECT COUNT(orderKey) FROM totalOrder WHERE rdate BETWEEN '${year}-${month}-01 00:00:00' AND '${year}-${month}-31 23:59:59' AND status LIKE 'F') AS "refund",
	(SELECT SUM(od.cnt) FROM totalOrder t JOIN orderDetail od ON od.orderKey = t.orderKey WHERE rdate BETWEEN '${year}-${month}-01 00:00:00' AND '${year}-${month}-31 23:59:59' AND status NOT LIKE 'F') AS "totalSales"
	FROM totalOrder
	WHERE rdate BETWEEN '${year}-${month}-01 00:00:00' AND '${year}-${month}-31 23:59:59' AND status NOT LIKE 'F'
	</select>
	

	<!-- 월간 카테고리별 통계 -->
	<select id="categoryMonthAnalyze" parameterType="String" resultType="ItemDTO">
		SELECT i.categoryKey, sum(od.price*od.cnt) AS salesSum,
		count(od.price*od.cnt) AS salesCnt
		FROM orderDetaiL od
		INNER JOIN item i ON i.itemKey=od.itemKey
		INNER JOIN totalOrder o ON o.orderKey=od.orderKey WHERE
		<![CDATA[
		DATE_FORMAT(o.rdate, '%Y-%m-%d') >= DATE_FORMAT( '${year}-${month}-01','%Y-%m-%d') AND 
		DATE_FORMAT(o.rdate, '%Y-%m-%d') <= DATE_FORMAT('${year}-${month}-31', '%Y-%m-%d')
		]]>
		GROUP BY i.categoryKey
		ORDER BY categoryKey ASC
	</select>
	
		<!-- 월간 카테고리별 통계 -->
	<select id="categoryDayAnalyze" parameterType="String" resultType="ItemDTO">
		SELECT i.categoryKey, sum(od.price*od.cnt) AS salesSum,
		count(od.price*od.cnt) AS salesCnt
		FROM orderDetaiL od
		INNER JOIN item i ON i.itemKey=od.itemKey
		INNER JOIN totalOrder o ON o.orderKey=od.orderKey WHERE
		<![CDATA[
		DATE_FORMAT(o.rdate, '%Y-%m-%d') = DATE_FORMAT( '${year}-${month}-${day}','%Y-%m-%d')
		]]>
		GROUP BY i.categoryKey
		ORDER BY categoryKey ASC
	</select>
	
	<select id="yearSalesChart" parameterType="String" resultType="OrderDTO">
		SELECT * 
		FROM(
			SELECT DATE_FORMAT(dt.d,'%Y-%m') AS tempDate,
			IFNULL(SUM(o.price),0) AS totalSales
            FROM dateT dt
            LEFT JOIN  totalOrder o ON (DATE_FORMAT(o.rdate, '%Y-%m-%d')=dt.d)
            GROUP BY tempDate
            ORDER BY tempDate ASC
			)a
		WHERE tempDate LIKE CONCAT ('%', #{year}, '%')
	</select>
	<select id="monthSalesChart" parameterType="String" resultType="OrderDTO">
		SELECT * 
		FROM(
			SELECT DATE_FORMAT(dt.d,'%Y-%m-%d') AS tempDate,
			IFNULL(SUM(o.price),0) AS totalSales
            FROM dateT dt
            LEFT JOIN  totalOrder o ON (DATE_FORMAT(o.rdate, '%Y-%m-%d')=dt.d)
            GROUP BY tempDate
            ORDER BY tempDate ASC
			)a
		WHERE tempDate LIKE CONCAT ('%', '${year}-${month}', '%')
	</select>
	<select id="daySalesChart" parameterType="String" resultType="OrderDTO">
		SELECT * 
		FROM(
			SELECT tt.t AS tempDate,
			IFNULL(SUM(o.price),0) AS totalSales
            FROM timeT tt
            LEFT JOIN  totalOrder o ON (HOUR(o.rdate)=tt.t) AND DATE_FORMAT(o.rdate, '%Y-%m-%d') LIKE '${year}-${month}-${day}'
            GROUP BY tempDate
            ORDER BY tempDate ASC
		)a;
	</select>

	<!-- 주어진 년도, 월, 일 에 해당되는 판매액, 배송건, 구매확정률에 대한 데이터 -->
	<select id="dashBoardCardDay" resultType="OrderDTO">
	SELECT COUNT(orderKey) AS "itemCnt", SUM(price) AS "price",
	(SELECT COUNT(orderKey) FROM totalOrder WHERE rdate BETWEEN '${year}-${month}-${day} 00:00:00' AND '${year}-${month}-${day} 23:59:59' AND status NOT LIKE 'F' ) AS "status",
	(SELECT COUNT(orderKey) FROM totalOrder WHERE rdate BETWEEN '${year}-${month}-${day} 00:00:00' AND '${year}-${month}-${day} 23:59:59' AND status LIKE 'F') AS "refund",
	(SELECT SUM(od.cnt) FROM totalOrder t JOIN orderDetail od ON od.orderKey = t.orderKey WHERE rdate BETWEEN '${year}-${month}-${day} 00:00:00' AND '${year}-${month}-${day} 23:59:59' AND status NOT LIKE 'F') AS "totalSales" 
	FROM totalOrder
	WHERE rdate BETWEEN '${year}-${month}-${day} 00:00:00' AND '${year}-${month}-${day} 23:59:59' AND status NOT LIKE 'F';
	</select>

</mapper>